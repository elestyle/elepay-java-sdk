/*
 * elepay API リファレンス
 * elepay APIはRESTをベースに構成された決済APIです。支払い処理、返金処理など、決済に関わる運用における様々なことができます。
 *
 * The version of the OpenAPI document: 1.2.5
 * Contact: support@elestyle.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.elepay.client.charge.pojo;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.elepay.client.charge.pojo.ChannelPropertiesDto;
import io.elepay.client.charge.pojo.CustomerPropertiesDto;
import io.elepay.client.charge.pojo.PaymentMethodType;
import io.elepay.client.charge.pojo.ResourceType;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * 決済方法詳細情報
 */
@JsonPropertyOrder({
  PaymentMethodDto.JSON_PROPERTY_PAYMENT_METHOD,
  PaymentMethodDto.JSON_PROPERTY_RESOURCES,
  PaymentMethodDto.JSON_PROPERTY_BRAND,
  PaymentMethodDto.JSON_PROPERTY_UA,
  PaymentMethodDto.JSON_PROPERTY_CHANNEL_PROPERTIES,
  PaymentMethodDto.JSON_PROPERTY_CUSTOMER_PROPERTIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentMethodDto {
  public static final String JSON_PROPERTY_PAYMENT_METHOD = "paymentMethod";
  private PaymentMethodType paymentMethod;

  public static final String JSON_PROPERTY_RESOURCES = "resources";
  private List<ResourceType> resources;

  public static final String JSON_PROPERTY_BRAND = "brand";
  private List<String> brand;

  public static final String JSON_PROPERTY_UA = "ua";
  private String ua;

  public static final String JSON_PROPERTY_CHANNEL_PROPERTIES = "channelProperties";
  private ChannelPropertiesDto channelProperties;

  public static final String JSON_PROPERTY_CUSTOMER_PROPERTIES = "customerProperties";
  private CustomerPropertiesDto customerProperties;

  public PaymentMethodDto() {
  }

  public PaymentMethodDto paymentMethod(PaymentMethodType paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentMethodType getPaymentMethod() {
    return paymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethod(PaymentMethodType paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public PaymentMethodDto resources(List<ResourceType> resources) {
    
    this.resources = resources;
    return this;
  }

  public PaymentMethodDto addResourcesItem(ResourceType resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceType> getResources() {
    return resources;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResources(List<ResourceType> resources) {
    this.resources = resources;
  }


  public PaymentMethodDto brand(List<String> brand) {
    
    this.brand = brand;
    return this;
  }

  public PaymentMethodDto addBrandItem(String brandItem) {
    if (this.brand == null) {
      this.brand = new ArrayList<>();
    }
    this.brand.add(brandItem);
    return this;
  }

   /**
   * クレジットカードの場合、利用できるクレジットカードブランド
   * @return brand
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getBrand() {
    return brand;
  }


  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrand(List<String> brand) {
    this.brand = brand;
  }


  public PaymentMethodDto ua(String ua) {
    
    this.ua = ua;
    return this;
  }

   /**
   * 利用できるブラウザのUserAgent
   * @return ua
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUa() {
    return ua;
  }


  @JsonProperty(JSON_PROPERTY_UA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUa(String ua) {
    this.ua = ua;
  }


  public PaymentMethodDto channelProperties(ChannelPropertiesDto channelProperties) {
    
    this.channelProperties = channelProperties;
    return this;
  }

   /**
   * Get channelProperties
   * @return channelProperties
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANNEL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChannelPropertiesDto getChannelProperties() {
    return channelProperties;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelProperties(ChannelPropertiesDto channelProperties) {
    this.channelProperties = channelProperties;
  }


  public PaymentMethodDto customerProperties(CustomerPropertiesDto customerProperties) {
    
    this.customerProperties = customerProperties;
    return this;
  }

   /**
   * Get customerProperties
   * @return customerProperties
   * @deprecated
  **/
  @Deprecated
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerPropertiesDto getCustomerProperties() {
    return customerProperties;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerProperties(CustomerPropertiesDto customerProperties) {
    this.customerProperties = customerProperties;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodDto paymentMethodDto = (PaymentMethodDto) o;
    return Objects.equals(this.paymentMethod, paymentMethodDto.paymentMethod) &&
        Objects.equals(this.resources, paymentMethodDto.resources) &&
        Objects.equals(this.brand, paymentMethodDto.brand) &&
        Objects.equals(this.ua, paymentMethodDto.ua) &&
        Objects.equals(this.channelProperties, paymentMethodDto.channelProperties) &&
        Objects.equals(this.customerProperties, paymentMethodDto.customerProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethod, resources, brand, ua, channelProperties, customerProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodDto {\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    ua: ").append(toIndentedString(ua)).append("\n");
    sb.append("    channelProperties: ").append(toIndentedString(channelProperties)).append("\n");
    sb.append("    customerProperties: ").append(toIndentedString(customerProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `paymentMethod` to the URL query string
    if (getPaymentMethod() != null) {
      try {
        joiner.add(String.format("%spaymentMethod%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPaymentMethod()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `resources` to the URL query string
    if (getResources() != null) {
      for (int i = 0; i < getResources().size(); i++) {
        if (getResources().get(i) != null) {
          try {
            joiner.add(String.format("%sresources%s%s=%s", prefix, suffix,
                "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                URLEncoder.encode(String.valueOf(getResources().get(i)), "UTF-8").replaceAll("\\+", "%20")));
          } catch (UnsupportedEncodingException e) {
            // Should never happen, UTF-8 is always supported
            throw new RuntimeException(e);
          }
        }
      }
    }

    // add `brand` to the URL query string
    if (getBrand() != null) {
      for (int i = 0; i < getBrand().size(); i++) {
        try {
          joiner.add(String.format("%sbrand%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getBrand().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `ua` to the URL query string
    if (getUa() != null) {
      try {
        joiner.add(String.format("%sua%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUa()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `channelProperties` to the URL query string
    if (getChannelProperties() != null) {
      joiner.add(getChannelProperties().toUrlQueryString(prefix + "channelProperties" + suffix));
    }

    // add `customerProperties` to the URL query string
    if (getCustomerProperties() != null) {
      joiner.add(getCustomerProperties().toUrlQueryString(prefix + "customerProperties" + suffix));
    }

    return joiner.toString();
  }

}

