/*
 * elepay API リファレンス
 * elepay APIはRESTをベースに構成された決済APIです。支払い処理、返金処理など、決済に関わる運用における様々なことができます。
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support@elestyle.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.elepay.client.charge.pojo;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * 決済方法 - auto 自動識別(CPM決済のみ利用可能) - alipay アリペイ - alipayhk アリペイHK - alipayplus Alipay+ - amazonpay Amazon Pay - applepay Apple Pay - applepay_cn Apple Pay(中国) - atone atone(コンビニで翌月払い) - aupay au Pay - creditcard クレジットカード - dana DANA - docomopay d払い - ezlink EZ-Link - felica 電子マネー - felica_id iD - felica_quickpay QUICPay - felica_transport_ic 交通系ICカード - gcash GCash - ginkopay 銀行Pay - googlepay Google Pay - jcoinpay J-Coin Pay - jkopay JKOPAY - kakaopay Kakao Pay - linepay LINE Pay - merpay メルペイ - origamipay Origami Pay - paidy Paidy 翌月払い - paypal PayPal - paypay PayPay - rakutenpay 楽天ペイ - tng Touch &#39;n Go eWallet - truemoney TrueMoney - unionpay 雲閃付 - wechatpay Wechat Pay - aeonpay AEON Pay - rabbitlinepay Rabbit LINE Pay - bpi BPI - boost Boost - hellomoney HelloMoney by AUB 
 */
public enum PaymentMethodType {
  
  ALIPAY("alipay"),
  
  ALIPAYHK("alipayhk"),
  
  ALIPAYPLUS("alipayplus"),
  
  AMAZONPAY("amazonpay"),
  
  APPLEPAY("applepay"),
  
  APPLEPAY_CN("applepay_cn"),
  
  ATONE("atone"),
  
  AUPAY("aupay"),
  
  CREDITCARD("creditcard"),
  
  DANA("dana"),
  
  DOCOMOPAY("docomopay"),
  
  EZLINK("ezlink"),
  
  FELICA("felica"),
  
  FELICA_ID("felica_id"),
  
  FELICA_QUICKPAY("felica_quickpay"),
  
  FELICA_TRANSPORT_IC("felica_transport_ic"),
  
  GCASH("gcash"),
  
  GINKOPAY("ginkopay"),
  
  GOOGLEPAY("googlepay"),
  
  JCOINPAY("jcoinpay"),
  
  JKOPAY("jkopay"),
  
  KAKAOPAY("kakaopay"),
  
  LINEPAY("linepay"),
  
  MERPAY("merpay"),
  
  ORIGAMIPAY("origamipay"),
  
  PAIDY("paidy"),
  
  PAYPAL("paypal"),
  
  PAYPAY("paypay"),
  
  RAKUTENPAY("rakutenpay"),
  
  TNG("tng"),
  
  TRUEMONEY("truemoney"),
  
  UNIONPAY("unionpay"),
  
  WECHATPAY("wechatpay"),
  
  AEONPAY("aeonpay"),
  
  RABBITLINEPAY("rabbitlinepay"),
  
  BPI("bpi"),
  
  BOOST("boost"),
  
  HELLOMONEY("hellomoney"),
  
  AUTO("auto");

  private String value;

  PaymentMethodType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static PaymentMethodType fromValue(String value) {
    for (PaymentMethodType b : PaymentMethodType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

